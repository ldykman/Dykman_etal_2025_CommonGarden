xlab("Exclosure") +
ylab("% Gravels with Kelp") +
ggtitle("Green Gravel Survivorship") +
theme_bw() +
labs(fill = "Cobble") +
labs(color = "Cobble") +
facet_grid(rows = vars(days_old)) +
theme(text=element_text(size = 20),
aspect.ratio=0.6,
panel.border = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.line = element_line(colour = "black"),
legend.title = element_text(size=18),
legend.text = element_text(size=16),
panel.background = element_rect(fill = "transparent", colour = NA),
plot.background = element_rect(fill = "transparent", colour = NA)), height=8, width=6) # Setting the theme
ggsave("Figure_Green_Gravel_Survivorship_Field.pdf",
ggplot(survival2, aes(fill = cobble, x=exclosure, y=survival_mean)) +
scale_color_brewer(palette = "PuOr") +
geom_bar(stat = "identity", position = position_dodge(), color = "black") +
geom_errorbar(aes(x = exclosure,
ymin = ifelse(survival_mean - STD_ERR <= 0, 0, survival_mean - STD_ERR),
ymax = survival_mean + STD_ERR), size = 0.5, width = 0.4, stat = "identity", position = position_dodge(0.9))+ #, size = 0.2, width=0.2, alpha=0.6) +# Setting the theme
ylim(0,100) +
xlab("Exclosure") +
ylab("% Gravels with Kelp") +
ggtitle("Green Gravel Survivorship") +
theme_bw() +
labs(fill = "Cobble") +
labs(color = "Cobble") +
facet_grid(rows = vars(days_old)) +
theme(text=element_text(size = 20),
aspect.ratio=0.6,
panel.border = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.line = element_line(colour = "black"),
legend.title = element_text(size=18),
legend.text = element_text(size=16),
panel.background = element_rect(fill = "transparent", colour = NA),
plot.background = element_rect(fill = "transparent", colour = NA)), height=8, width=6) # Setting the theme
ggsave("Figure_Green_Gravel_Survivorship_Field.pdf",
ggplot(survival2, aes(fill = cobble, x=exclosure, y=survival_mean)) +
scale_color_brewer(palette = "PuOr") +
geom_bar(stat = "identity", position = position_dodge(), color = "black") +
geom_errorbar(aes(x = exclosure,
ymin = ifelse(survival_mean - STD_ERR <= 0, 0, survival_mean - STD_ERR),
ymax = survival_mean + STD_ERR), size = 0.5, width = 0.4, stat = "identity", position = position_dodge(0.9))+ #, size = 0.2, width=0.2, alpha=0.6) +# Setting the theme
ylim(0,100) +
xlab("Exclosure") +
ylab("% Gravels with Kelp") +
ggtitle("Green Gravel Survivorship") +
theme_bw() +
#labs(fill = "Cobble") +
#labs(color = "Cobble") +
facet_grid(rows = vars(days_old)) +
theme(text=element_text(size = 20),
aspect.ratio=0.6,
panel.border = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.line = element_line(colour = "black"),
legend.title = element_text(size=18),
legend.text = element_text(size=16),
panel.background = element_rect(fill = "transparent", colour = NA),
plot.background = element_rect(fill = "transparent", colour = NA)), height=8, width=6) # Setting the theme
str(data.gg)
substrate.col <- c("navajowhite1", "navajowhite3")
names(substrate.col) <- c("no", "yes")
### HORNBY ISLAND MAUDE REEF GREEN GRAVEL ANALYSIS
# This script runs statistical analyses and makes figures for Hornby Island green gravel plot length and survivorship.
# Lauren Dykman
# July 18 2023
rm(list=ls())
# INSTALLING PACKAGES
#install.packages("ggfortify")
#install.packages("coxme")
#install.packages("frailtyHL")
library(ggfortify)
library(tidyr)
library(dplyr)
library(lme4)
library(coxme)
library(frailtyHL)
# SETTING WORKING DIRECTORY
path <- "/Users/laurendykman/Desktop/Baum_Lab/Data/Hornby_Denman/2023/analysis/data"
getwd()
setwd(path)
getwd()
# IMPORTING DATA
input_file = "Updated_Hornby_GG_measurements_2023-05-26.csv"
data.gg <- read.csv(paste(path, input_file, sep = "/"), header=TRUE)
substrate.col <- c("navajowhite1", "navajowhite3")
names(substrate.col) <- c("no", "yes")
data.gg$exclosure <- as.character(data.gg$exclosure)
data.gg$cobble <- as.character(data.gg$cobble)
data.gg$date <- as.Date(data.gg$date)
data.gg$days_old <- as.character(data.gg$date - as.Date("2023-01-03"))
data.gg$days_old <- factor(data.gg$days_old, levels = c("73", "127", "143")) # Check unique(data$DAYS_OLD) and write the days as factors here
data.gg$cobble_exclosure_days <- paste(data.gg$exclosure, data.gg$cobble, data.gg$days_old, sep = "_")
data.survival <- data.gg %>%
group_by(plot_no, exclosure, cobble, days_old, number_gravels, number_gravels_with_kelp) %>%
tally()
data.survival$survival <- data.survival$number_gravels_with_kelp/20*100
mean.survival.all <- mean(data.survival$survival, na.rm = TRUE)
survival.mean <- aggregate(data.survival$survival, by = list(data.survival$exclosure, data.survival$cobble, data.survival$days_old), FUN=mean)
colnames(survival.mean) <- c("exclosure", "cobble", "days_old", "survival_mean")
survival.mean$cobble_exclosure_days <- paste(survival.mean$exclosure, survival.mean$cobble, survival.mean$days_old, sep = "_")
survival.sd <- aggregate(data.survival$survival, by = list(data.survival$exclosure, data.survival$cobble, data.survival$days_old), FUN=sd)
colnames(survival.sd) <- c("exclosure", "cobble", "days_old", "survival_sd")
survival.sd$cobble_exclosure_days <- paste(survival.sd$exclosure, survival.sd$cobble, survival.mean$days_old, sep = "_")
survival2 <- merge(survival.mean, survival.sd[c("cobble_exclosure_days", "survival_sd")], by = "cobble_exclosure_days")
survival2$STD_ERR <- survival2$survival_sd/sqrt(3)
ggsave("Figure_Green_Gravel_Survivorship_Field.pdf",
ggplot(survival2, aes(fill = cobble, x=exclosure, y=survival_mean)) +
#scale_color_brewer(palette = "PuOr") +
geom_bar(stat = "identity", position = position_dodge(), color = "black") +
geom_errorbar(aes(x = exclosure,
ymin = ifelse(survival_mean - STD_ERR <= 0, 0, survival_mean - STD_ERR),
ymax = survival_mean + STD_ERR), size = 0.5, width = 0.4, stat = "identity", position = position_dodge(0.9))+ #, size = 0.2, width=0.2, alpha=0.6) +# Setting the theme
scale_fill_manual("Cobble", values = substrate.col) +
scale_color_manual("Cobble", values = substrate.col) +
ylim(0,100) +
xlab("Exclosure") +
ylab("% Gravels with Kelp") +
ggtitle("Green Gravel Survivorship") +
theme_bw() +
labs(fill = "Cobble") +
labs(color = "Cobble") +
facet_grid(rows = vars(days_old)) +
theme(text=element_text(size = 20),
aspect.ratio=0.6,
panel.border = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.line = element_line(colour = "black"),
legend.title = element_text(size=18),
legend.text = element_text(size=16),
panel.background = element_rect(fill = "transparent", colour = NA),
plot.background = element_rect(fill = "transparent", colour = NA)), height=8, width=6) # Setting the theme
str(data.gg)
ggsave("Figure_Green_Gravel_Survivorship_Field.pdf",
ggplot(survival2, aes(fill = cobble, x=exclosure, y=survival_mean)) +
#scale_color_brewer(palette = "PuOr") +
geom_bar(stat = "identity", position = position_dodge(), color = "black") +
geom_errorbar(aes(x = exclosure,
ymin = ifelse(survival_mean - STD_ERR <= 0, 0, survival_mean - STD_ERR),
ymax = survival_mean + STD_ERR), size = 0.5, width = 0.4, stat = "identity", position = position_dodge(0.9))+ #, size = 0.2, width=0.2, alpha=0.6) +# Setting the theme
scale_fill_manual("cobble", values = substrate.col) +
scale_color_manual("cobble", values = substrate.col) +
ylim(0,100) +
xlab("Exclosure") +
ylab("% Gravels with Kelp") +
ggtitle("Green Gravel Survivorship") +
theme_bw() +
#labs(fill = "Cobble") +
#labs(color = "Cobble") +
facet_grid(rows = vars(days_old)) +
theme(text=element_text(size = 20),
aspect.ratio=0.6,
panel.border = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.line = element_line(colour = "black"),
legend.title = element_text(size=18),
legend.text = element_text(size=16),
panel.background = element_rect(fill = "transparent", colour = NA),
plot.background = element_rect(fill = "transparent", colour = NA)), height=8, width=6) # Setting the theme
ggsave("Figure_Green_Gravel_Survivorship_Field.pdf",
ggplot(survival2, aes(fill = cobble, x=exclosure, y=survival_mean)) +
#scale_color_brewer(palette = "PuOr") +
geom_bar(stat = "identity", position = position_dodge(), color = "black") +
geom_errorbar(aes(x = exclosure,
ymin = ifelse(survival_mean - STD_ERR <= 0, 0, survival_mean - STD_ERR),
ymax = survival_mean + STD_ERR), size = 0.5, width = 0.4, stat = "identity", position = position_dodge(0.9))+ #, size = 0.2, width=0.2, alpha=0.6) +# Setting the theme
scale_fill_manual("cobble", values = substrate.col) +
scale_color_manual("cobble", values = substrate.col) +
ylim(0,100) +
xlab("Exclosure") +
ylab("% Gravels with Kelp") +
ggtitle("Green Gravel Survivorship") +
theme_bw() +
#labs(fill = "Cobble") +
#labs(color = "Cobble") +
facet_grid(rows = vars(days_old)) +
theme(text=element_text(size = 20),
aspect.ratio=0.6,
#panel.border = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.line = element_line(colour = "black"),
legend.title = element_text(size=18),
legend.text = element_text(size=16),
panel.background = element_rect(fill = "transparent", colour = NA),
plot.background = element_rect(fill = "transparent", colour = NA)), height=8, width=6) # Setting the theme
ggsave("Figure_Green_Gravel_Survivorship_Field.pdf",
ggplot(survival2, aes(fill = cobble, x=exclosure, y=survival_mean)) +
#scale_color_brewer(palette = "PuOr") +
geom_bar(stat = "identity", position = position_dodge(), color = "black") +
geom_errorbar(aes(x = exclosure,
ymin = ifelse(survival_mean - STD_ERR <= 0, 0, survival_mean - STD_ERR),
ymax = survival_mean + STD_ERR), size = 0.5, width = 0.4, stat = "identity", position = position_dodge(0.9))+ #, size = 0.2, width=0.2, alpha=0.6) +# Setting the theme
scale_fill_manual("cobble", values = substrate.col) +
scale_color_manual("cobble", values = substrate.col) +
ylim(0,100) +
xlab("exclosure") +
ylab("% gravels with kelp") +
ggtitle("Green Gravel Survivorship") +
theme_bw() +
#labs(fill = "Cobble") +
#labs(color = "Cobble") +
facet_grid(rows = vars(days_old)) +
theme(text=element_text(size = 20),
aspect.ratio=0.6,
#panel.border = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.line = element_line(colour = "black"),
legend.title = element_text(size=18),
legend.text = element_text(size=16),
panel.background = element_rect(fill = "transparent", colour = NA),
plot.background = element_rect(fill = "transparent", colour = NA)), height=8, width=6) # Setting the theme
# Analyzing growth on green gravel
length.gg.mean <- aggregate(data.gg$stipe_with_float, by = list(data.gg$cobble_exclosure_days, data.gg$exclosure, data.gg$cobble, data.gg$days_old), FUN=mean, na.rm = TRUE)
colnames(length.gg.mean) <- c("cobble_exclosure_days", "exclosure", "cobble", "days_old", "stipe_length_mean")
length.gg.sd <- aggregate(data.gg$stipe_with_float, by = list(data.gg$cobble_exclosure_days, data.gg$exclosure, data.gg$cobble, data.gg$days_old), FUN=sd, na.rm = TRUE)
colnames(length.gg.sd) <- c("cobble_exclosure_days", "exclosure", "cobble", "days_old", "stipe_length_sd")
counts <- data.gg %>%
group_by(cobble_exclosure_days, stipe_with_float) %>%
tally()
counts.table <- aggregate(counts$n, by = list(counts$cobble_exclosure_days), FUN=sum)
colnames(counts.table) <- c("cobble_exclosure_days", "n.with.na")
counts.no.na <- counts[!is.na(counts$stipe_with_float),]
counts.table.no.na <- aggregate(counts.no.na$n, by = list(counts.no.na$cobble_exclosure_days), FUN=sum)
colnames(counts.table.no.na) <- c("cobble_exclosure_days", "n")
counts.final <- merge(counts.table.no.na, counts.table, by = "cobble_exclosure_days", all = TRUE)
counts.final$n[is.na(counts.final$n)] <- 0
length.gg.2 <- merge(length.gg.mean, length.gg.sd[c("cobble_exclosure_days", "stipe_length_sd")], by = "cobble_exclosure_days")
length.gg.3 <- merge(length.gg.2, counts.final, by = "cobble_exclosure_days")
length.gg.3$sqrtN <- sqrt(length.gg.3$n)
length.gg.3$STD_ERR <- length.gg.3$stipe_length_sd/length.gg.3$sqrtN
ggsave("Figure_Kelp_Growth_Green_Gravel_Hornby.pdf",
ggplot(length.gg.3, aes(fill = cobble, x=exclosure, y=stipe_length_mean)) +
geom_bar(stat = "identity", position = position_dodge(), color = "black") +
geom_errorbar(aes(x = exclosure,
ymin = ifelse(stipe_length_mean - STD_ERR <= 0, 0, stipe_length_mean - STD_ERR),
ymax = stipe_length_mean + STD_ERR), size = 0.5, width = 0.4, stat = "identity", position = position_dodge(0.9))+ #, size = 0.2, width=0.2, alpha=0.6) +# Setting the theme
scale_fill_manual("cobble", values = substrate.col) +
scale_color_manual("cobble", values = substrate.col) +
xlab("Exclosure") +
ylab("Stipe Length (cm)") +
ggtitle("Green Gravel Growth") +
theme_bw() +
facet_grid(rows = vars(days_old)) +
theme(text=element_text(size = 20),
aspect.ratio=0.6,
#panel.border = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.line = element_line(colour = "black"),
legend.title = element_text(size=18),
legend.text = element_text(size=16),
panel.background = element_rect(fill = "transparent", colour = NA),
plot.background = element_rect(fill = "transparent", colour = NA)), height=8, width=6) # Setting the theme
ggsave("Figure_Kelp_Growth_Green_Gravel_Hornby.pdf",
ggplot(length.gg.3, aes(fill = cobble, x=exclosure, y=stipe_length_mean)) +
geom_bar(stat = "identity", position = position_dodge(), color = "black") +
geom_errorbar(aes(x = exclosure,
ymin = ifelse(stipe_length_mean - STD_ERR <= 0, 0, stipe_length_mean - STD_ERR),
ymax = stipe_length_mean + STD_ERR), size = 0.5, width = 0.4, stat = "identity", position = position_dodge(0.9))+ #, size = 0.2, width=0.2, alpha=0.6) +# Setting the theme
scale_fill_manual("cobble", values = substrate.col) +
scale_color_manual("cobble", values = substrate.col) +
xlab("exclosure") +
ylab("stipe length (cm)") +
ggtitle("Green Gravel Growth") +
theme_bw() +
facet_grid(rows = vars(days_old)) +
theme(text=element_text(size = 20),
aspect.ratio=0.6,
#panel.border = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.line = element_line(colour = "black"),
legend.title = element_text(size=18),
legend.text = element_text(size=16),
panel.background = element_rect(fill = "transparent", colour = NA),
plot.background = element_rect(fill = "transparent", colour = NA)), height=8, width=6) # Setting the theme
ggsave("Figure_Kelp_Growth_Green_Gravel_Hornby.pdf",
ggplot(length.gg.3, aes(fill = cobble, x=exclosure, y=stipe_length_mean)) +
geom_bar(stat = "identity", position = position_dodge(), color = "black") +
geom_errorbar(aes(x = exclosure,
ymin = ifelse(stipe_length_mean - STD_ERR <= 0, 0, stipe_length_mean - STD_ERR),
ymax = stipe_length_mean + STD_ERR), size = 0.5, width = 0.4, stat = "identity", position = position_dodge(0.9))+ #, size = 0.2, width=0.2, alpha=0.6) +# Setting the theme
scale_fill_manual("cobble", values = substrate.col) +
scale_color_manual("cobble", values = substrate.col) +
xlab("exclosure") +
ylab("stipe length (cm)") +
ggtitle("Green Gravel Growth") +
theme_bw() +
facet_grid(rows = vars(days_old)) +
theme(text=element_text(size = 20),
aspect.ratio=0.6,
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.line = element_line(colour = "black"),
legend.title = element_text(size=18),
legend.text = element_text(size=16),
panel.background = element_rect(fill = "transparent", colour = NA),
plot.background = element_rect(fill = "transparent", colour = NA)), height=8, width=6) # Setting the theme
ggsave("Figure_Kelp_Growth_Green_Gravel_Hornby.pdf",
ggplot(length.gg.3, aes(fill = cobble, x=exclosure, y=stipe_length_mean)) +
geom_bar(stat = "identity", position = position_dodge(), color = "black") +
geom_errorbar(aes(x = exclosure,
ymin = ifelse(stipe_length_mean - STD_ERR <= 0, 0, stipe_length_mean - STD_ERR),
ymax = stipe_length_mean + STD_ERR), size = 0.5, width = 0.4, stat = "identity", position = position_dodge(0.9))+ #, size = 0.2, width=0.2, alpha=0.6) +# Setting the theme
scale_fill_manual("cobble", values = substrate.col) +
scale_color_manual("cobble", values = substrate.col) +
xlab("exclosure") +
ylab("stipe length (cm)") +
ggtitle("Green Gravel Growth") +
theme_bw() +
facet_grid(rows = vars(days_old)) +
theme(text=element_text(size = 20),
aspect.ratio=0.6,
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.line = element_line(colour = "black"),
legend.title = element_text(size=18),
legend.text = element_text(size=16),
panel.background = element_rect(fill = "transparent", colour = NA),
plot.background = element_rect(fill = "transparent", colour = NA)), height=7, width=5) # Setting the theme
### HORNBY ISLAND MAUDE REEF GREEN GRAVEL ANALYSIS
# This script runs statistical analyses and makes figures for Hornby Island green gravel plot length and survivorship.
# Lauren Dykman
# July 18 2023
rm(list=ls())
# INSTALLING PACKAGES
#install.packages("ggfortify")
#install.packages("coxme")
#install.packages("frailtyHL")
library(ggfortify)
library(tidyr)
library(dplyr)
library(lme4)
library(coxme)
library(frailtyHL)
# SETTING WORKING DIRECTORY
path <- "/Users/laurendykman/Desktop/Baum_Lab/Data/Hornby_Denman/2023/analysis/data"
getwd()
setwd(path)
getwd()
# IMPORTING DATA
input_file = "Updated_Hornby_GG_measurements_2023-05-26.csv"
data.gg <- read.csv(paste(path, input_file, sep = "/"), header=TRUE)
substrate.col <- c("navajowhite1", "navajowhite3")
names(substrate.col) <- c("no", "yes")
data.gg$exclosure <- as.character(data.gg$exclosure)
data.gg$cobble <- as.character(data.gg$cobble)
data.gg$date <- as.Date(data.gg$date)
data.gg$days_old <- as.character(data.gg$date - as.Date("2023-01-03"))
data.gg$days_old <- factor(data.gg$days_old, levels = c("73", "127", "143")) # Check unique(data$DAYS_OLD) and write the days as factors here
data.gg$cobble_exclosure_days <- paste(data.gg$exclosure, data.gg$cobble, data.gg$days_old, sep = "_")
data.survival <- data.gg %>%
group_by(plot_no, exclosure, cobble, days_old, number_gravels, number_gravels_with_kelp) %>%
tally()
data.survival$survival <- data.survival$number_gravels_with_kelp/20*100
mean.survival.all <- mean(data.survival$survival, na.rm = TRUE)
survival.mean <- aggregate(data.survival$survival, by = list(data.survival$exclosure, data.survival$cobble, data.survival$days_old), FUN=mean)
colnames(survival.mean) <- c("exclosure", "cobble", "days_old", "survival_mean")
survival.mean$cobble_exclosure_days <- paste(survival.mean$exclosure, survival.mean$cobble, survival.mean$days_old, sep = "_")
survival.sd <- aggregate(data.survival$survival, by = list(data.survival$exclosure, data.survival$cobble, data.survival$days_old), FUN=sd)
colnames(survival.sd) <- c("exclosure", "cobble", "days_old", "survival_sd")
survival.sd$cobble_exclosure_days <- paste(survival.sd$exclosure, survival.sd$cobble, survival.mean$days_old, sep = "_")
survival2 <- merge(survival.mean, survival.sd[c("cobble_exclosure_days", "survival_sd")], by = "cobble_exclosure_days")
survival2$STD_ERR <- survival2$survival_sd/sqrt(3)
ggsave("Figure_Green_Gravel_Survivorship_Field.pdf",
ggplot(survival2, aes(fill = cobble, x=exclosure, y=survival_mean)) +
#scale_color_brewer(palette = "PuOr") +
geom_bar(stat = "identity", position = position_dodge(), color = "black") +
geom_errorbar(aes(x = exclosure,
ymin = ifelse(survival_mean - STD_ERR <= 0, 0, survival_mean - STD_ERR),
ymax = survival_mean + STD_ERR), size = 0.5, width = 0.4, stat = "identity", position = position_dodge(0.9))+ #, size = 0.2, width=0.2, alpha=0.6) +# Setting the theme
scale_fill_manual("cobble", values = substrate.col) +
scale_color_manual("cobble", values = substrate.col) +
ylim(0,100) +
xlab("exclosure") +
ylab("% gravels with kelp") +
ggtitle("Green Gravel Survivorship") +
theme_bw() +
#labs(fill = "Cobble") +
#labs(color = "Cobble") +
facet_grid(rows = vars(days_old)) +
theme(text=element_text(size = 20),
aspect.ratio=0.6,
#panel.border = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.line = element_line(colour = "black"),
legend.title = element_text(size=18),
legend.text = element_text(size=16),
panel.background = element_rect(fill = "transparent", colour = NA),
plot.background = element_rect(fill = "transparent", colour = NA)), height=7, width=5) # Setting the theme
# Analyzing growth on green gravel
length.gg.mean <- aggregate(data.gg$stipe_with_float, by = list(data.gg$cobble_exclosure_days, data.gg$exclosure, data.gg$cobble, data.gg$days_old), FUN=mean, na.rm = TRUE)
colnames(length.gg.mean) <- c("cobble_exclosure_days", "exclosure", "cobble", "days_old", "stipe_length_mean")
length.gg.sd <- aggregate(data.gg$stipe_with_float, by = list(data.gg$cobble_exclosure_days, data.gg$exclosure, data.gg$cobble, data.gg$days_old), FUN=sd, na.rm = TRUE)
colnames(length.gg.sd) <- c("cobble_exclosure_days", "exclosure", "cobble", "days_old", "stipe_length_sd")
counts <- data.gg %>%
group_by(cobble_exclosure_days, stipe_with_float) %>%
tally()
counts.table <- aggregate(counts$n, by = list(counts$cobble_exclosure_days), FUN=sum)
colnames(counts.table) <- c("cobble_exclosure_days", "n.with.na")
counts.no.na <- counts[!is.na(counts$stipe_with_float),]
counts.table.no.na <- aggregate(counts.no.na$n, by = list(counts.no.na$cobble_exclosure_days), FUN=sum)
colnames(counts.table.no.na) <- c("cobble_exclosure_days", "n")
counts.final <- merge(counts.table.no.na, counts.table, by = "cobble_exclosure_days", all = TRUE)
counts.final$n[is.na(counts.final$n)] <- 0
length.gg.2 <- merge(length.gg.mean, length.gg.sd[c("cobble_exclosure_days", "stipe_length_sd")], by = "cobble_exclosure_days")
length.gg.3 <- merge(length.gg.2, counts.final, by = "cobble_exclosure_days")
length.gg.3$sqrtN <- sqrt(length.gg.3$n)
length.gg.3$STD_ERR <- length.gg.3$stipe_length_sd/length.gg.3$sqrtN
ggsave("Figure_Kelp_Growth_Green_Gravel_Hornby.pdf",
ggplot(length.gg.3, aes(fill = cobble, x=exclosure, y=stipe_length_mean)) +
geom_bar(stat = "identity", position = position_dodge(), color = "black") +
geom_errorbar(aes(x = exclosure,
ymin = ifelse(stipe_length_mean - STD_ERR <= 0, 0, stipe_length_mean - STD_ERR),
ymax = stipe_length_mean + STD_ERR), size = 0.5, width = 0.4, stat = "identity", position = position_dodge(0.9))+ #, size = 0.2, width=0.2, alpha=0.6) +# Setting the theme
scale_fill_manual("cobble", values = substrate.col) +
scale_color_manual("cobble", values = substrate.col) +
xlab("exclosure") +
ylab("stipe length (cm)") +
ggtitle("Green Gravel Growth") +
theme_bw() +
facet_grid(rows = vars(days_old)) +
theme(text=element_text(size = 20),
aspect.ratio=0.6,
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.line = element_line(colour = "black"),
legend.title = element_text(size=18),
legend.text = element_text(size=16),
panel.background = element_rect(fill = "transparent", colour = NA),
plot.background = element_rect(fill = "transparent", colour = NA)), height=7, width=5) # Setting the theme
### HORNBY ISLAND MAUDE REEF GREEN GRAVEL ANALYSIS
# This script runs statistical analyses and makes figures for Hornby Island green gravel plot length and survivorship.
# Lauren Dykman
# July 18 2023
rm(list=ls())
# INSTALLING PACKAGES
#install.packages("ggfortify")
#install.packages("coxme")
#install.packages("frailtyHL")
library(ggfortify)
library(tidyr)
library(dplyr)
library(lme4)
library(coxme)
library(frailtyHL)
# SETTING WORKING DIRECTORY
path <- "/Users/laurendykman/Desktop/Baum_Lab/Data/Hornby_Denman/2023/analysis/data"
getwd()
setwd(path)
getwd()
# IMPORTING DATA
input_file = "Updated_Hornby_GG_measurements_2023-05-26.csv"
data.gg <- read.csv(paste(path, input_file, sep = "/"), header=TRUE)
substrate.col <- c("navajowhite1", "navajowhite3")
names(substrate.col) <- c("no", "yes")
data.gg$exclosure <- as.character(data.gg$exclosure)
data.gg$cobble <- as.character(data.gg$cobble)
data.gg$date <- as.Date(data.gg$date)
data.gg$days_old <- as.character(data.gg$date - as.Date("2023-01-03"))
data.gg$days_old <- factor(data.gg$days_old, levels = c("73", "127", "143")) # Check unique(data$DAYS_OLD) and write the days as factors here
data.gg$cobble_exclosure_days <- paste(data.gg$exclosure, data.gg$cobble, data.gg$days_old, sep = "_")
data.survival <- data.gg %>%
group_by(plot_no, exclosure, cobble, days_old, number_gravels, number_gravels_with_kelp) %>%
tally()
data.survival$survival <- data.survival$number_gravels_with_kelp/20*100
mean.survival.all <- mean(data.survival$survival, na.rm = TRUE)
survival.mean <- aggregate(data.survival$survival, by = list(data.survival$exclosure, data.survival$cobble, data.survival$days_old), FUN=mean)
colnames(survival.mean) <- c("exclosure", "cobble", "days_old", "survival_mean")
survival.mean$cobble_exclosure_days <- paste(survival.mean$exclosure, survival.mean$cobble, survival.mean$days_old, sep = "_")
survival.sd <- aggregate(data.survival$survival, by = list(data.survival$exclosure, data.survival$cobble, data.survival$days_old), FUN=sd)
colnames(survival.sd) <- c("exclosure", "cobble", "days_old", "survival_sd")
survival.sd$cobble_exclosure_days <- paste(survival.sd$exclosure, survival.sd$cobble, survival.mean$days_old, sep = "_")
survival2 <- merge(survival.mean, survival.sd[c("cobble_exclosure_days", "survival_sd")], by = "cobble_exclosure_days")
survival2$STD_ERR <- survival2$survival_sd/sqrt(3)
ggsave("Figure_Green_Gravel_Survivorship_Field.pdf",
ggplot(survival2, aes(fill = cobble, x=exclosure, y=survival_mean)) +
#scale_color_brewer(palette = "PuOr") +
geom_bar(stat = "identity", position = position_dodge(), color = "black") +
geom_errorbar(aes(x = exclosure,
ymin = ifelse(survival_mean - STD_ERR <= 0, 0, survival_mean - STD_ERR),
ymax = survival_mean + STD_ERR), size = 0.5, width = 0.4, stat = "identity", position = position_dodge(0.9))+ #, size = 0.2, width=0.2, alpha=0.6) +# Setting the theme
scale_fill_manual("cobble", values = substrate.col) +
scale_color_manual("cobble", values = substrate.col) +
ylim(0,100) +
xlab("exclosure") +
ylab("% gravels with kelp") +
ggtitle("Green Gravel Survival") +
theme_bw() +
facet_grid(rows = vars(days_old)) +
theme(text=element_text(size = 20),
aspect.ratio=0.6,
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.line = element_line(colour = "black"),
legend.title = element_text(size=18),
legend.text = element_text(size=16),
panel.background = element_rect(fill = "transparent", colour = NA),
plot.background = element_rect(fill = "transparent", colour = NA)), height=7, width=5) # Setting the theme
